name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout cÃ³digo
      uses: actions/checkout@v4

    - name: Configurar Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Instalar dependÃªncias
      run: npm ci

    - name: Executar linter (ESLint)
      run: npm run lint --if-present

    - name: Executar testes
      run: npm test
      env:
        MONGODB_URI: mongodb://localhost:27017/blog-aulas-test
        NODE_ENV: test

    - name: Verificar cobertura de testes
      run: npm run test:coverage
      env:
        MONGODB_URI: mongodb://localhost:27017/blog-aulas-test
        NODE_ENV: test

    - name: Upload da cobertura para Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout cÃ³digo
      uses: actions/checkout@v4

    - name: Configurar Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build da imagem Docker
      run: |
        docker build -t blog-aulas-api:latest .
        echo "âœ… Build da imagem Docker concluÃ­do com sucesso!"
        docker images | grep blog-aulas-api

    - name: Teste da imagem Docker
      run: |
        echo "ðŸ§ª Testando se a imagem foi criada corretamente..."
        docker run --rm blog-aulas-api:latest node --version
        echo "Imagem Docker funcionando corretamente!"

  deploy:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout cÃ³digo
      uses: actions/checkout@v4

    - name: Deploy para produÃ§Ã£o
      run: |
        echo "ðŸš€ Deploy simulado para produÃ§Ã£o"
        echo "Testes passaram em Node.js 18.x e 20.x"
        echo "Build da imagem Docker concluÃ­do"
        echo "AplicaÃ§Ã£o pronta para deploy!"
